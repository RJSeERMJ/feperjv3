// Utilit√°rio para testar configura√ß√£o do Google Drive
export const testGoogleDriveConfig = () => {
  console.log('üîç Testando configura√ß√£o do Google Drive...');
  
  const config = {
    apiKey: process.env.REACT_APP_GOOGLE_DRIVE_API_KEY,
    clientId: process.env.REACT_APP_GOOGLE_DRIVE_CLIENT_ID,
    folderId: process.env.REACT_APP_GOOGLE_DRIVE_FOLDER_ID
  };

  console.log('üìã Configura√ß√µes encontradas:');
  console.log('- API Key:', config.apiKey ? '‚úÖ Configurada' : '‚ùå N√£o configurada');
  console.log('- Client ID:', config.clientId ? '‚úÖ Configurada' : '‚ùå N√£o configurada');
  console.log('- Folder ID:', config.folderId ? '‚úÖ Configurada' : '‚ùå N√£o configurada');

  if (!config.apiKey) {
    console.warn('‚ö†Ô∏è  API Key n√£o configurada (opcional, mas recomendada)');
  }

  if (!config.clientId) {
    console.error('‚ùå Client ID √© obrigat√≥rio!');
    return false;
  }

  if (!config.folderId) {
    console.warn('‚ö†Ô∏è  Folder ID n√£o configurado (opcional)');
  }

  console.log('‚úÖ Configura√ß√£o b√°sica OK');
  return true;
};

// Fun√ß√£o para testar conex√£o com Google Drive
export const testGoogleDriveConnection = async () => {
  try {
    console.log('üîó Testando conex√£o com Google Drive...');
    
    // Importar dinamicamente para evitar erros se n√£o estiver configurado
    const { GoogleDriveService } = await import('../services/googleDriveService');
    
    const isConnected = await GoogleDriveService.testConnection();
    
    if (isConnected) {
      console.log('‚úÖ Conex√£o com Google Drive estabelecida com sucesso!');
      return true;
    } else {
      console.error('‚ùå Falha na conex√£o com Google Drive');
      return false;
    }
  } catch (error) {
    console.error('‚ùå Erro ao testar conex√£o:', error);
    return false;
  }
};

// Fun√ß√£o para testar acesso √† pasta
export const testFolderAccess = async () => {
  try {
    console.log('üìÅ Testando acesso √† pasta do Google Drive...');
    
    const folderId = process.env.REACT_APP_GOOGLE_DRIVE_FOLDER_ID;
    if (!folderId) {
      console.warn('‚ö†Ô∏è  Folder ID n√£o configurado');
      return false;
    }

    const { GoogleDriveService } = await import('../services/googleDriveService');
    
    // Tentar listar arquivos na pasta (mesmo que vazia)
    const files = await GoogleDriveService.listAtletaFiles('test');
    
    console.log('‚úÖ Acesso √† pasta OK');
    return true;
  } catch (error) {
    console.error('‚ùå Erro ao acessar pasta:', error);
    return false;
  }
};

// Teste completo
export const runFullTest = async () => {
  console.log('üöÄ Iniciando teste completo do Google Drive...');
  console.log('=' .repeat(50));
  
  // Teste 1: Configura√ß√£o
  const configOk = testGoogleDriveConfig();
  if (!configOk) {
    console.log('‚ùå Teste de configura√ß√£o falhou');
    return false;
  }
  
  console.log('');
  
  // Teste 2: Conex√£o
  const connectionOk = await testGoogleDriveConnection();
  if (!connectionOk) {
    console.log('‚ùå Teste de conex√£o falhou');
    return false;
  }
  
  console.log('');
  
  // Teste 3: Acesso √† pasta
  const folderOk = await testFolderAccess();
  if (!folderOk) {
    console.log('‚ö†Ô∏è  Teste de pasta falhou (pode ser opcional)');
  }
  
  console.log('');
  console.log('=' .repeat(50));
  console.log('‚úÖ Teste completo finalizado!');
  
  return connectionOk;
};
